def status = ''

def createStage(stageName, jobName) {

  script {
      try {

        stage("${stageName}") {

          build job: "${jobName}"

        }
        // slackSend(channel: "#channelName", message: "Message")
      } catch (Exception e) {

        println(e.getMessage());
        // slackSend(channel: "#channelName", message: "Message")


        throw e;

      }

  }

}

pipeline {
  agent none
  triggers {
    cron("${params.CRON_EXPRESSION}")
  }
  parameters {

    string(name: 'JIRA_TICKET_NUMBER', description: 'Jira Ticket Number',defaultValue:currentBuild.previousBuild.buildVariables["ticketNumber"]?:'')
    string(name: 'FIELD_PATH', description: 'Field on the Jira Issue to Watch',defaultValue:'status.name')
    string(name: 'FIELD_TARGET_VALUE', description: 'Field target value when trigger the job',defaultValue:'Scheduled')
    string(name: 'CRON_EXPRESSION'.description: 'Cron expression for the pipeline',defaultValue=''), 
    string(name: 'UNIVERSE',description: 'environment',defaultValue:'uat')

  }

  stages {
    stage('check the jira field status') {
      agent {label "<label>" }
      steps {
       withCredentials([[
            $class: 'UsernamePasswordMultiBinding',
            credentialsId: "jira-creds",
            usernameVariable: 'JIRA_USERNAME',
            passwordVariable: 'JIRA_API_TOKEN',
        ]]) {
            
          script {

            env.ticketNumber = params.JIRA_TICKET_NUMBER;

            if(params.JIRA_TICKET_NUMBER != null){

              status = sh(returnStdout: true, script: "python3 scripts/check_status_field.py ${params.JIRA_TICKET_NUMBER}")
              status = status.replaceAll("[\n\r]", "");
              println(status);
            }
          
          }
        }
      }
    }
  // create the jobs dynamically
  stage('build the UAT and prod jobs') {

    when { expression { params.UNIVERSE == 'uat' || params.UNIVERSE == 'stg'}}
    steps {

      script {

          // if the status value is equal to the target value then only build
          if(status.equals(params.FIELD_TARGET_VALUE) ){
            
              createStage("","");


              
          
          }
        }
      }
    }


  stage('build the Prod jobs') {

    when { expression { params.UNIVERSE == 'prod'}}
    steps {

      script {

          // if the status value is equal to the target value then only build
          if(status.equals(params.FIELD_TARGET_VALUE) ){

              
              createStage("","");
          
          }
        }
      }
    }
  }
   
   
  post {
    always {
      echo "====++++always++++===="
    }
    success {
      echo "====++++only when successful ++++===="
      node(<label>){
        
        script{

            if(params.UNIVERSE=="uat" || params.UNIVERSE=="stg"){

                // build the prod job else don't
            }

        }

      }
    }
    failure {
      echo "====++++only when failed++++===="
    }
  }
}
